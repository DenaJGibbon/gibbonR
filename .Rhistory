c("Dim.1", "Dim.2", "Class")
plot.for.AcousticSignalsMFCC.F$Class <- as.factor(plot.for.AcousticSignalsMFCC.F$Class)
Plot1Females <- ggpubr::ggscatter(data = plot.for.AcousticSignalsMFCC.F,x = "Dim.1",
y = "Dim.2",
color  = "Class", alpha=0.4)+ggtitle('Recording units')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot1Females
# Unsupervised clustering -------------------------------------------------
library(apcluster)
aricode::NMI(as.factor(AcousticSignalsAPFemales@idx),trainingdataFemalesUpdate$class)
# Adaptive returns q=0.1
q.val.seq <- seq(from=0.1,to=0.9,by=0.1)
AcousticSignal.sil.df <- data.frame()
for(a in 1:length(q.val.seq)){
print(a)
AcousticSignalsAP <-
apcluster::apcluster(negDistMat(r=2),q=q.val.seq[a],
trainingdataFemalesUpdate[,-c(1,179)],
maxits=100000,convits=10000)
sil <-
cluster::silhouette(x = AcousticSignalsAP@idx,
dist = dist( trainingdataFemalesUpdate[,-c(1,179)]))
sil.val <- (summary(sil)$avg.width)
temp.sil.df <-  cbind.data.frame(sil.val,q.val.seq[a])
AcousticSignal.sil.df <- rbind.data.frame(AcousticSignal.sil.df,temp.sil.df)
}
MaxSil <- which.max(AcousticSignal.sil.df$sil.val)
max(AcousticSignal.sil.df$sil.val)
AcousticSignalsAPFemales <-
apcluster::apcluster(negDistMat(r=2),q= q.val.seq[MaxSil],
trainingdataFemalesUpdate[,-c(1,179)],
maxits=100000,convits=10000)
AcousticSignals.umap.F <-
umap::umap(trainingdataFemales[,-c(1,179)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
AcousticSignalsAPFemales <-
apcluster::apcluster(negDistMat(r=2),q=0.1,# q.val.seq[MaxSil],
trainingdataFemalesUpdate[,-c(1,179)],
maxits=100000,convits=10000)
AcousticSignals.umap.F <-
umap::umap(trainingdataFemales[,-c(1,179)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
trainingdataFemales
# Female individuals ------------------------------------------------------
source('R/MFCCFunctionMeanSD.R')
# Female individuals ------------------------------------------------------
source('gibbonR/R/MFCCFunctionMeanSD.R')
# Female individuals ------------------------------------------------------
source('gibbonR/R/MFCCFunction.R')
# Female individuals ------------------------------------------------------
source('R/MFCCFunction.R')
subset.directory <- '/Users/denaclink/Desktop/RStudio Projects/gibbonID/data/FemaleGibbonsSwiftHQ/'
trainingdataFemales <- MFCCFunction(input.dir=subset.directory , min.freq = 400, max.freq = 1600,win.avg = 'mean.sd')
trainingdataFemalesnames <- list.files(subset.directory,
full.names = F,pattern = '.wav')
trainingdataFemales$Class <- str_split_fixed(trainingdataFemalesnames,pattern = '_',n=2)[,1]
trainingdataFemales$Class <- as.factor(trainingdataFemales$Class)
MetaData <- read.csv("/Users/denaclink/Desktop/RStudio Projects/T0010_SEAsia2018_2019.csv")
# Save as new object
trainingdataFemalesUpdate <- data.frame()
UniqueClass <- unique(trainingdataFemales$Class)
for(b in 1:length(UniqueClass)){
TempClass <-  UniqueClass[b]
TempMeta <- subset(MetaData,Deployment.Comments==TempClass)
trainingdataFemalessub <- subset(trainingdataFemales,class==TempClass)
trainingdataFemalessub$lat <- TempMeta$LAT..decimal.degrees.
trainingdataFemalessub$lon <- TempMeta$LON..decimal.degrees.
trainingdataFemalesUpdate <- rbind.data.frame(trainingdataFemalesUpdate, trainingdataFemalessub)
}
head(trainingdataFemalesUpdate)
AcousticSignalsMFCC.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,50)],
#labels=as.factor(trainingdataFemales$Class),
controlscale=TRUE,scale=3)
colnames(trainingdataFemalesUpdate)
AcousticSignalsMFCC.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor(trainingdataFemales$Class),
controlscale=TRUE,scale=3)
plot.for.AcousticSignalsMFCC.F <-
cbind.data.frame(AcousticSignalsMFCC.umap.F$layout[,1:2],
trainingdataFemalesUpdate$class)
colnames(plot.for.AcousticSignalsMFCC.F) <-
c("Dim.1", "Dim.2", "Class")
plot.for.AcousticSignalsMFCC.F$Class <- as.factor(plot.for.AcousticSignalsMFCC.F$Class)
Plot1Females <- ggpubr::ggscatter(data = plot.for.AcousticSignalsMFCC.F,x = "Dim.1",
y = "Dim.2",
color  = "Class", alpha=0.4)+ggtitle('Recording units')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot1Females
# Unsupervised clustering -------------------------------------------------
library(apcluster)
aricode::NMI(as.factor(AcousticSignalsAPFemales@idx),trainingdataFemalesUpdate$class)
# Adaptive returns q=0.1
q.val.seq <- seq(from=0.1,to=0.9,by=0.1)
AcousticSignal.sil.df <- data.frame()
for(a in 1:length(q.val.seq)){
print(a)
AcousticSignalsAP <-
apcluster::apcluster(negDistMat(r=2),q=q.val.seq[a],
trainingdataFemalesUpdate[,-c(1,51)],
maxits=100000,convits=10000)
sil <-
cluster::silhouette(x = AcousticSignalsAP@idx,
dist = dist( trainingdataFemalesUpdate[,-c(1,51)]))
sil.val <- (summary(sil)$avg.width)
temp.sil.df <-  cbind.data.frame(sil.val,q.val.seq[a])
AcousticSignal.sil.df <- rbind.data.frame(AcousticSignal.sil.df,temp.sil.df)
}
MaxSil <- which.max(AcousticSignal.sil.df$sil.val)
max(AcousticSignal.sil.df$sil.val)
MaxSil <- which.max(AcousticSignal.sil.df$sil.val)
max(AcousticSignal.sil.df$sil.val)
AcousticSignalsAPFemales <-
apcluster::apcluster(negDistMat(r=2),q.val.seq[MaxSil],
trainingdataFemalesUpdate[,-c(1,51)],
maxits=100000,convits=10000)
AcousticSignals.umap.F <-
umap::umap(trainingdataFemales[,-c(1,179)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
AcousticSignals.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
AcousticSignals.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
AcousticSignals.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
AcousticSignals.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
set.seed(4)
AcousticSignals.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
trainingdataFemales <- MFCCFunction(input.dir=subset.directory , min.freq = 600, max.freq = 1400,win.avg = 'mean.sd')
trainingdataFemalesnames <- list.files(subset.directory,
full.names = F,pattern = '.wav')
trainingdataFemales$Class <- str_split_fixed(trainingdataFemalesnames,pattern = '_',n=2)[,1]
trainingdataFemales$Class <- as.factor(trainingdataFemales$Class)
MetaData <- read.csv("/Users/denaclink/Desktop/RStudio Projects/T0010_SEAsia2018_2019.csv")
# Save as new object
trainingdataFemalesUpdate <- data.frame()
UniqueClass <- unique(trainingdataFemales$Class)
for(b in 1:length(UniqueClass)){
TempClass <-  UniqueClass[b]
TempMeta <- subset(MetaData,Deployment.Comments==TempClass)
trainingdataFemalessub <- subset(trainingdataFemales,class==TempClass)
trainingdataFemalessub$lat <- TempMeta$LAT..decimal.degrees.
trainingdataFemalessub$lon <- TempMeta$LON..decimal.degrees.
trainingdataFemalesUpdate <- rbind.data.frame(trainingdataFemalesUpdate, trainingdataFemalessub)
}
head(trainingdataFemalesUpdate)
AcousticSignalsMFCC.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor(trainingdataFemales$Class),
controlscale=TRUE,scale=3)
plot.for.AcousticSignalsMFCC.F <-
cbind.data.frame(AcousticSignalsMFCC.umap.F$layout[,1:2],
trainingdataFemalesUpdate$class)
colnames(plot.for.AcousticSignalsMFCC.F) <-
c("Dim.1", "Dim.2", "Class")
plot.for.AcousticSignalsMFCC.F$Class <- as.factor(plot.for.AcousticSignalsMFCC.F$Class)
Plot1Females <- ggpubr::ggscatter(data = plot.for.AcousticSignalsMFCC.F,x = "Dim.1",
y = "Dim.2",
color  = "Class", alpha=0.4)+ggtitle('Recording units')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot1Females
# Unsupervised clustering -------------------------------------------------
library(apcluster)
aricode::NMI(as.factor(AcousticSignalsAPFemales@idx),trainingdataFemalesUpdate$class)
# Adaptive returns q=0.1
q.val.seq <- seq(from=0.1,to=0.9,by=0.1)
AcousticSignal.sil.df <- data.frame()
for(a in 1:length(q.val.seq)){
print(a)
AcousticSignalsAP <-
apcluster::apcluster(negDistMat(r=2),q=q.val.seq[a],
trainingdataFemalesUpdate[,-c(1,51)],
maxits=100000,convits=10000)
sil <-
cluster::silhouette(x = AcousticSignalsAP@idx,
dist = dist( trainingdataFemalesUpdate[,-c(1,51)]))
sil.val <- (summary(sil)$avg.width)
temp.sil.df <-  cbind.data.frame(sil.val,q.val.seq[a])
AcousticSignal.sil.df <- rbind.data.frame(AcousticSignal.sil.df,temp.sil.df)
}
MaxSil <- which.max(AcousticSignal.sil.df$sil.val)
max(AcousticSignal.sil.df$sil.val)
AcousticSignalsAPFemales <-
apcluster::apcluster(negDistMat(r=2),q.val.seq[MaxSil],
trainingdataFemalesUpdate[,-c(1,51)],
maxits=100000,convits=10000)
AcousticSignals.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
q.val.seq[MaxSil]
AcousticSignalsAPFemales <-
apcluster::apcluster(negDistMat(r=2),q=0.1,#q.val.seq[MaxSil],
trainingdataFemalesUpdate[,-c(1,51)],
maxits=100000,convits=10000)
AcousticSignals.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,51)],
#labels=as.factor( as.numeric(AcousticSignalsAPFemales@idx)),
controlscale=TRUE,scale=3)
length(AcousticSignalsAPFemales@exemplars)
plot.for.AcousticSignals.F <-
cbind.data.frame(AcousticSignals.umap.F$layout[,1:2],#VGGishDF$PercentClass,
as.factor( as.numeric(AcousticSignalsAPFemales@idx)))
colnames(plot.for.AcousticSignals.F) <-
c("Dim.1", "Dim.2","Cluster")
plot.for.AcousticSignals.F$Cluster <- as.factor(plot.for.AcousticSignals.F$Cluster)
plot.for.AcousticSignals.F$Class <- trainingdataFemales$Class
Plot2Females <- ggpubr::ggscatter(data = plot.for.AcousticSignals.F,x = "Dim.1",
y = "Dim.2",
color='Cluster', alpha=0.4) + guides(color='none')+ggtitle('Affinity propagation')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot2Females
length(AcousticSignalsAPFemales@exemplars)
file.choose()
subsamps
subsamps <- c(1,2,3)
numeric(length(subsamps))
remove.packages('gibbonR')
# Add documentation opt+cmd+shfit+r
library(devtools)
library(ggpubr)
library(rmarkdown)
install_github("DenaJGibbon/gibbonR")
remove.packages('gibbonR')
# Load required libraries
# Add documentation opt+cmd+shfit+r
library(devtools)
library(ggpubr)
library(rmarkdown)
install_github("DenaJGibbon/gibbonR")
mfcc.vector.list <- vector("list", 10000)
mfcc.vector.list
remove.packages('gibbonR')
library(devtools)
library(ggpubr)
library(rmarkdown)
install_github("DenaJGibbon/gibbonR")
remove.packages('gibbonR')
install_github("DenaJGibbon/gibbonR")
file.choose()
9*24
library(plyr)
library(stringr)
library(ggpubr)
library(apcluster)
library(tuneR)
library(aricode)
library(clValid)
library(gibbonR)
library(dplyr)
library(tidyr)
library(ggpubr)
set.seed(13)
# Female individuals ------------------------------------------------------
source('R/MFCCFunction.R')
source('R/MFCCFunction.R')
subset.directory <- '/Users/denaclink/Desktop/RStudio Projects/gibbonID/data/FemaleGibbonsSwiftHQ/'
trainingdataFemales <- gibbonR::MFCCFunction(input.dir=subset.directory , min.freq = 600, max.freq = 1400,win.avg = 'standard')
trainingdataFemalesnames <- list.files(subset.directory,
full.names = F,pattern = '.wav')
trainingdataFemales$Class <- str_split_fixed(trainingdataFemalesnames,pattern = '_',n=2)[,1]
trainingdataFemales$Class <- as.factor(trainingdataFemales$Class)
MetaData <- read.csv("/Users/denaclink/Desktop/RStudio Projects/T0010_SEAsia2018_2019.csv")
# Save as new object
trainingdataFemalesUpdate <- data.frame()
UniqueClass <- unique(trainingdataFemales$Class)
for(b in 1:length(UniqueClass)){
TempClass <-  UniqueClass[b]
TempMeta <- subset(MetaData,Deployment.Comments==TempClass)
trainingdataFemalessub <- subset(trainingdataFemales,class==TempClass)
trainingdataFemalessub$lat <- TempMeta$LAT..decimal.degrees.
trainingdataFemalessub$lon <- TempMeta$LON..decimal.degrees.
trainingdataFemalesUpdate <- rbind.data.frame(trainingdataFemalesUpdate, trainingdataFemalessub)
}
head(trainingdataFemalesUpdate)
AcousticSignalsMFCC.umap.F <-
umap::umap(trainingdataFemalesUpdate[,-c(1,179)],
#labels=as.factor(trainingdataFemales$Class),
controlscale=TRUE,scale=3)
plot.for.AcousticSignalsMFCC.F <-
cbind.data.frame(AcousticSignalsMFCC.umap.F$layout[,1:2],
trainingdataFemalesUpdate$class)
colnames(plot.for.AcousticSignalsMFCC.F) <-
c("Dim.1", "Dim.2", "Class")
plot.for.AcousticSignalsMFCC.F$Class <- as.factor(plot.for.AcousticSignalsMFCC.F$Class)
Plot1Females <- ggpubr::ggscatter(data = plot.for.AcousticSignalsMFCC.F,x = "Dim.1",
y = "Dim.2",
color  = "Class", alpha=0.4)+ggtitle('Recording units')+
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank()  #remove y axis ticks
)
Plot1Females
# Unsupervised clustering -------------------------------------------------
library(apcluster)
# Adaptive returns q=0.1
q.val.seq <- seq(from=0.1,to=0.9,by=0.1)
AcousticSignal.sil.df <- data.frame()
for(a in 1:length(q.val.seq)){
print(a)
AcousticSignalsAP <-
apcluster::apcluster(negDistMat(r=2),q=q.val.seq[a],
trainingdataFemalesUpdate[,-c(1,179)],
maxits=100000,convits=10000)
sil <-
cluster::silhouette(x = AcousticSignalsAP@idx,
dist = dist( trainingdataFemalesUpdate[,-c(1,179)]))
sil.val <- (summary(sil)$avg.width)
temp.sil.df <-  cbind.data.frame(sil.val,q.val.seq[a])
AcousticSignal.sil.df <- rbind.data.frame(AcousticSignal.sil.df,temp.sil.df)
}
MaxSil <- which.max(AcousticSignal.sil.df$sil.val)
max(AcousticSignal.sil.df$sil.val)
q.val.seq[MaxSil]
AcousticSignalsAPFemales <-
apcluster::apcluster(negDistMat(r=2),q=q.val.seq[MaxSil],
trainingdataFemalesUpdate[,-c(1,179)],
maxits=100000,convits=10000)
length(AcousticSignalsAPFemales@exemplars)
remove.packages('gibbonR')
# Load required libraries
# Add documentation opt+cmd+shfit+r
library(devtools)
library(ggpubr)
library(rmarkdown)
install_github("DenaJGibbon/gibbonR")
