% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DetectAndClassify.R
\name{DetectAndClassify}
\alias{DetectAndClassify}
\title{Function to train ML algorithm, do audio segmentation and classification on multiple sound files}
\usage{
DetectAndClassify(
  input,
  feature.df,
  model.type.list = c("SVM"),
  tune = FALSE,
  target.signal = "female.gibbon",
  file.type = "list",
  model.svm = NULL,
  short.wav.duration = 300,
  min.freq = 400,
  max.freq = 2000,
  noise.quantile.val = 0.5,
  time.window.number = 5,
  n.windows = 9,
  num.cep = 12,
  spectrogram.window = 1600,
  pattern.split = ".wav",
  min.signal.dur = 4,
  maximum.separation = 1,
  max.sound.event.dur = 12,
  output = "wav",
  probability.thresh.svm = 0.75,
  probability.thresh.rf = 0.75,
  wav.output = "TRUE",
  output.dir = getwd(),
  swift.time = TRUE,
  time.start = 6,
  time.stop = 12,
  write.csv.output = TRUE,
  verbose = TRUE,
  random.sample = "NA"
)
}
\arguments{
\item{input}{Either full path to directory containing .wav files or a list with file name as first element and .wav as second element}

\item{feature.df}{Dataframe of features from labeled sound files; first column must be class labels}

\item{tune}{Logical; if want to use 'tune' function for SVM; NOTE: for large datasets adds significant computing time}

\item{target.signal}{Labeled signal of interest from training data (feature.df)}

\item{min.freq}{Minimum frequency (Hz) of signal of interest}

\item{max.freq}{Maximum frequency (Hz) of signal of interest}

\item{n.windows}{Number of time windows to calculate for MFCCs}

\item{num.cep}{Number of cepstra coefficients to calculate for MFCCs}

\item{pattern.split}{Pattern to find and remove to create file name; currently set to ".wav"}

\item{output}{Either 'spectro', 'table' or 'wav'}

\item{probability.thresh.svm}{Probability threshold (provided by machine learning algorithm) to be considered as target signal}

\item{output.dir}{Specified output directory; set to current working directory}
}
\description{
Function to train ML algorithm, do audio segmentation and classification on multiple sound files
}
\examples{
caret

}
