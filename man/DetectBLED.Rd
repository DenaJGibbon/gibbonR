% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DetectBLED.R
\name{DetectBLED}
\alias{DetectBLED}
\title{Function to train ML algorithm, do audio segmentation and classification on multiple sound files}
\usage{
DetectBLED(
  input,
  feature.df,
  min.freq = 200,
  max.freq = 6000,
  noise.quantile.val = 0.75,
  spectrogram.window = 1600,
  subsample.dur = 300,
  pattern.split = ".wav",
  min.signal.dur = 1,
  max.sound.event.dur = 6,
  output = "wav",
  wav.output = "TRUE",
  output.dir = getwd(),
  swift.time = TRUE,
  time.start = 18,
  time.stop = 23,
  write.csv.output = TRUE,
  verbose = TRUE,
  random.sample = 100
)
}
\arguments{
\item{input}{Either full path to directory containing .wav files or a list with file name as first element and .wav as second element}

\item{feature.df}{Dataframe of features from labeled sound files; first column must be class labels}

\item{min.freq}{Minimum frequency (Hz) of signal of interest}

\item{max.freq}{Maximum frequency (Hz) of signal of interest}

\item{pattern.split}{Pattern to find and remove to create file name; currently set to ".rda"}

\item{output}{Either 'spectro', 'table' or 'wav'}

\item{output.dir}{Specified output directory; set to current working directory}

\item{model.type}{Choice of 'NNET', 'SVM', or 'GMM'}

\item{tune}{Logical; if want to use 'tune' function for SVM; NOTE: for large datasets adds significant computing time}

\item{target.signal}{Labeled signal of interest from training data (feature.df)}

\item{which.quant}{Specifies how to calculate noise values from GMM}

\item{wav.name}{Can be either full file path to .wav file location or R .wav object}

\item{n.windows}{Number of time windows to calculate for MFCCs}

\item{num.cep}{Number of cepstra coefficients to calculate for MFCCs}

\item{min.sound.event.dur}{Minimum time (in seconds) for sound events to be considered}

\item{probability.thresh}{Probability threshold (provided by machine learning algorithm) to be considered as target signal}

\item{wav.out}{Logical; if "TRUE" then writes each sound event as a wave file to directory}
}
\description{
Function to train ML algorithm, do audio segmentation and classification on multiple sound files
}
\examples{
Coming soon

}
