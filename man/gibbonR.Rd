% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gibbonR.R
\name{gibbonR}
\alias{gibbonR}
\title{gibbonR}
\usage{
gibbonR(
  input,
  input.type = "list",
  feature.df,
  model.type.list = c("SVM"),
  tune = FALSE,
  target.signal = "female.gibbon",
  short.wav.duration = 300,
  min.freq = 400,
  max.freq = 2000,
  noise.quantile.val = 0.5,
  minimum.separation = 5,
  n.windows = 9,
  num.cep = 12,
  spectrogram.window = 1600,
  pattern.split = ".wav",
  min.signal.dur = 4,
  maximum.separation = 1,
  max.sound.event.dur = 12,
  probability.thresh.svm = 0.75,
  probability.thresh.rf = 0.75,
  wav.output = "TRUE",
  output.dir = getwd(),
  swift.time = TRUE,
  time.start = 6,
  time.stop = 12,
  write.table.output = TRUE,
  verbose = TRUE,
  random.sample = "NA"
)
}
\arguments{
\item{input}{Either full path to directory containing .wav files, a list of .wav files, or a the path to a single .wav file}

\item{feature.df}{Data frame of features from labeled sound files; first column must be class labels}

\item{model.type.list}{Which machine learning model to use; SVM or RF}

\item{tune}{Logical; if want to use 'tune' function for SVM; NOTE: for large datasets adds significant computing time}

\item{target.signal}{Labeled signal of interest from training data (feature.df)}

\item{short.wav.duration}{Duration (s) to divide longer sound file to increase processing efficiency}

\item{min.freq}{Minimum frequency (Hz) of signal of interest}

\item{max.freq}{Maximum frequency (Hz) of signal of interest}

\item{noise.quantile.val}{A quantile value between 0 to 1 for the band energy summation}

\item{minimum.separation}{The minimum number of consecutive time windows that signals must be separated by to be considered a separate sound event}

\item{n.windows}{Number of time windows to calculate for MFCCs}

\item{num.cep}{Number of cepstra coefficients to calculate for MFCCs}

\item{spectrogram.window}{Window length for spectrogram analysis (input to spectro fuction from 'seewave')}

\item{pattern.split}{Pattern to find and remove to create file name; currently set to ".wav"}

\item{min.signal.dur}{The minimum duration (s) sound events must be to be considered sound events}

\item{maximum.separation}{The minimum number of consecutive time windows that signals must be separated by to be considered a separate sound event}

\item{max.sound.event.dur}{The maximum duration (s) sound events must be to be considered sound events; NOTE this only happens when writing text file}

\item{probability.thresh.svm}{Probability threshold (provided by SVM) to be considered as target signal}

\item{probability.thresh.rf}{Probability threshold (provided by RF) to be considered as target signal}

\item{wav.output}{Logical; output .wav files of detections in specified directory}

\item{output.dir}{Specified output directory; set to current working directory}

\item{swift.time}{If file name is in structure recorder_YYYYMMDD_HHMMSS can subset files based on specific times}

\item{time.start}{Time recordings start (hour)}

\item{time.stop}{Time recordings stop (hour)}

\item{write.table.output}{Logical; write Raven selection tables to output directory}

\item{verbose}{Logical; print out steps}

\item{random.sample}{If a random subset of files in a directory are desired specify a value, otherwise 'NA'}
}
\value{
If write.table.output=TRUE writes a .txt file for each sound file with detections

If write.table.output=TRUE writes a .txt file for each sound file with detections
}
\description{
This function identifies sound events using band-limited energy summation and then classifies the sound events using a trained support vector machine or random forest algorithm.
}
\examples{
\donttest{MFCCFunction(input.dir = "FocalRecordings",min.freq = 400,max.freq=2500)}
}
