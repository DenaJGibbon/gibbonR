% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/audio_segmentSVM.R
\name{audioSegmentSVM}
\alias{audioSegmentSVM}
\title{Audio segmentation using support vector machines}
\usage{
audioSegmentSVM(wav.file, min.freq = 400, max.freq = 2000,
  win.hop.time = 0.25, n.cep = 12, tune = FALSE,
  cost.list = c(0.001, 0.01, 0.1, 1, 2, 10, 100, 1000),
  gamma.list = c(0.01, 0.1, 0.5, 1, 2), cost.val = 1,
  gamma.val = 0.5, trainingdata, target.signal = "gibbon",
  prob.signal = 0.8, min.signal.dur = 1, writetodir = FALSE,
  output.dir)
}
\arguments{
\item{wav.file}{A R wave object or file path to .wav object; the sound file with audio signal(s) of interest}

\item{min.freq}{Minimum frequency of the signal of interest in Hz}

\item{max.freq}{Maximum frequency of the signal of interest in Hz}

\item{win.hop.time}{Window length (in sec); wintime and hoptime are equal so there is no overlap between successive windows}

\item{n.cep}{Number of cepstra to return when calculating Mel-frequency cepstral coefficients}

\item{tune}{Logical; whether to use parameter tuning of the SVM. If set to 'TRUE' will add substantial amount of processing time with a large dataset}

\item{cost.list}{List of values to tune the cost parameter for SVM; If 'TUNE' is set equal to 'TRUE'}

\item{gamma.list}{List of values to tune the gamma parameter for SVM; If 'TUNE' is set equal to 'TRUE'}

\item{trainingdata}{Dataframe of MFCCs from labeled sound files. The first column is the class labels. MFCC parameters for training data must be equal to the those used for SVM.}

\item{target.signal}{Which class from 'trainingdata' is the target signal.}

\item{prob.signal}{Minimum SVM probability for target signal to be considered as signal.}

\item{min.signal.dur}{Minimum duration for a sound event to be considered target signal.}

\item{writetodir}{Logical. If 'TRUE' will write sound events to specified output directory}

\item{output.dir}{File path where SVM identified sound events will be written.}

\item{wav.name}{Can be either full file path to .wav file location or R .wav object}

\item{min.signal.dur}{Minimum time (in seconds) of sound events}
}
\description{
This function requires the user to input a training data file with calculated MFCCs.It then calculates MFCCs for a user-specified input .wav file and uses SVM to identify the 'target signal' from the sound file.
}
\seealso{
calc_MFCC()
}
